{
    "$schema": "http://json-schema.org/draft-04/schema",
    "id": "schema.json",
    "description": "A Comprehensive Diabetes Model scenario file schema.",
    "required": [
        "scenario_name", "time_horizon", "population", "simulation"
    ],
    "type": "object",
    "properties": {
        "scenario_name": {
            "description": "Name of the scenario",
            "$ref": "types.json#/definitions/string"
        },
        "population": {
            "$ref": "population_schema.json"
        },
        "time_horizon": {
            "$ref": "#/definitions/horizon"
        },
        "iterations": {
            "description": "Number of simulations to conduct",
            "$ref": "types.json#/definitions/positiveInteger"
        },
        "seed": {
            "description": "Optional random number generation seed",
            "$ref": "types.json#/definitions/positiveInteger"
        },
        "simulation": {
            "$ref": "simulation_schema.json"
        },
        "economics": {
            "$ref": "economics_schema.json"
        },
        "experiments": {
            "$ref": "#/definitions/experiments"
        }
    },
    "definitions": {
        "horizon": {
            "description": "Simulation time horizon configuration.",
            "type": "object",
            "required": [
                "strategy", "limit"
            ],
            "properties": {
                "strategy": {
                    "description": "Horizon strategy. 'fixed' runs for a set duration. 'max_age' runs until the youngest indidual reaches the mx age. 'all_deceased' runs until all agents have passed away.",
                    "$ref": "types.json#/definitions/string",
                    "enum": ["fixed", "max_age", "all_deceased"]
                },
                "limit": {
                    "description": "Iteration limit. Only applied in 'fixed' and 'max_age' strategies",
                    "default": 0,
                    "$ref": "types.json#/definitions/positiveInteger"
                }
            }
        },
        "experiments": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "risk_reduction", "factor_change"
                        ]
                    },
                    "strategy": {
                        "type": "string",
                        "enum": [
                            "scalar", "set", "distribution"
                        ]
                    },
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "distribution": {
                                        "type": "string"
                                    }, 
                                    "maximum": {
                                        "type": ["integer", "number"]
                                    },
                                    "minimum": {
                                        "type": ["integer", "number"]
                                    },
                                    "count": {
                                        "type": "integer"
                                    }
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "integer"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            }
        },
        "strata": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "key", "labels"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bins": {
                        "type": "array"
                    }
                }
            }
        }
    }
}
